name: Deploy to Azure

on:
  push:
    branches: ["main", "feature/next-auth"]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          yarn install
        
      - name: Build Next.js app
        run: |
          yarn build
          mv .next/static .next/standalone/.next/static
          # mv public .next/standalone/public

      - name: Zip artifact for deployment
        run: |
          zip build.zip ./* .next -qr

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name:  Download artifact for deployment
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build.zip

      - name: 'Login to Azure Subscription'
        uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'test-web-app-43fsd32'
          package: build.zip
          slot-name: 'production'

      # - name: Deploy
      #   shell: pwsh
      #   run: |
      #     $ZIP_FILE_NAME = "./${{ env.FILE_NAME }}.zip"
      #     zip $ZIP_FILE_NAME ./* .next -qr
        
      #     write-host "Deploying $ZIP_FILE_NAME to ${{ env.WEB_APP_NAME }} in ${{ env.RESOURCE_GROUP_NAME }}"
        
      #     az webapp deploy `
      #         --resource-group ${{ env.RESOURCE_GROUP_NAME }} `
      #         --name ${{ env.WEB_APP_NAME }} `
      #         --src-path $ZIP_FILE_NAME `
      #         --type zip `
      #         --clean true 
      #   env:
      #     FILE_NAME: "build"
      #     RESOURCE_GROUP_NAME: 'Dev'
      #     WEB_APP_NAME: 'test-web-app-43fsd32'